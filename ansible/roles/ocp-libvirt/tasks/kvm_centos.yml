---

- name: Install KVM
  when: kvm_install  == "true"
  become: true
  block:
    - name: Installing KVM Packages
      yum:
        name:
          - libvirt
          - libvirt-devel
          - libvirt-daemon-kvm
          - qemu-kvm
          - NetworkManager
        state: present


    # Update qemu to +2.4 because option fw_cfg added in 2.4
    #  "qemu-kvm: -fw_cfg: invalid option"
    #  https://github.com/qemu/qemu/commit/81b2b81062612e
    - name: Add repos centos-release-openstack-stein
      when: ansible_distribution  == "CentOS"
      yum:
        name: centos-release-openstack-stein
        state: present

    - name: Disable all openstack repos except centos-qemu-ev
      when: ansible_distribution  == "CentOS"
      command: "yum-config-manager -q --disable centos-ceph-nautilus centos-nfs-ganesha28 centos-openstack-stein"

    - name: Upgrade all packages, include update qemu-kvm to >2.4
      when: ansible_distribution  == "CentOS"
    # because we added repo centos-qemu-ev from openstack
      yum:
        name: '*'
        state: latest



    - name: Enable and Start network
      become: true
      systemd:
        name: NetworkManager
        state: started
        enabled: yes

    - name: Enable and Start libvirtd
      systemd:
        name: libvirtd
        state: stopped
        enabled: yes

    - name: Enable and Start libvirtd-tcp.socket
      when: ansible_distribution  == "Fedora"
      systemd:
        name: libvirtd-tcp.socket
        state: restarted
        enabled: yes

    - name: Enable and Start libvirtd
      systemd:
        name: libvirtd
        state: started
        enabled: yes

    - name: Verify KVM module is loaded
      shell: "lsmod | grep -i kvm"
      register: result
      failed_when: "result.rc != 0"



- name: Prepare KVM
  when: kvm_configure  == "true"
  become: true
  block:
    - name: Enable IP Forwarding
      shell: "sysctl net.ipv4.ip_forward=1"

    - name: Make IP Forwarding configuration persistent
      lineinfile:
        path: /etc/sysctl.conf
        line: "net.ipv4.ip_forward = 1"
        insertbefore: BOF

    - name: Configure libvirt listen_tls
      lineinfile:
        path: /etc/libvirt/libvirtd.conf
        regexp: 'listen_tls'
        line: listen_tls = 0

    - name: Configure libvirt listen_tcp
      lineinfile:
        path: /etc/libvirt/libvirtd.conf
        regexp: 'listen_tcp'
        line: listen_tcp = 1

    - name: Configure libvirt auth_tcp
      lineinfile:
        path: /etc/libvirt/libvirtd.conf
        regexp: 'auth_tcp'
        line: auth_tcp="none"

    - name: Configure libvirt tcp_port
      lineinfile:
        path: /etc/libvirt/libvirtd.conf
        regexp: 'tcp_port'
        line: tcp_port = "16509"

    - name: Configure libvirt LIBVIRTD_ARGS
      lineinfile:
        path: /etc/sysconfig/libvirtd
        regexp: 'LIBVIRTD_ARGS'
        line: LIBVIRTD_ARGS="--listen"

    - name: restart libvirt
      become: true
      systemd:
        name: libvirtd
        state: restarted


    - name: Configure Iptables
      become: true
      ignore_errors: yes
      shell: |
        iptables -I INPUT -p tcp -s 192.168.126.0/24 -d {{ kvm_libvirt_network_gw }} --dport 16509 -j ACCEPT -m comment --comment 'Allow insecure libvirt clients'
        iptables -I INPUT -p tcp -s {{ hostvars['installer-host']['ansible_host'] }} -d {{ hostvars['kvm-host']['ansible_host'] }} --dport 16509 -j ACCEPT -m comment --comment 'Allow insecure libvirt clients'
        # Publishing
        iptables -A PREROUTING -t nat -i {{ kvm_interface }} -p tcp --dport 6443 -j DNAT --to {{ ocp_api_vip  }}:6443
        iptables -A FORWARD -p tcp -d {{ ocp_api_vip  }} --dport 6443 -j ACCEPT
        iptables -A PREROUTING -t nat -i {{ kvm_interface }} -p tcp --dport 443 -j DNAT --to {{ ocp_apps_vip  }}:443
        iptables -A FORWARD -p tcp -d {{ ocp_apps_vip  }} --dport 443 -j ACCEPT
        iptables -A PREROUTING -t nat -i {{ kvm_interface }} -p tcp --dport 80 -j DNAT --to {{ ocp_apps_vip  }}:80
        iptables -A FORWARD -p tcp -d {{ ocp_apps_vip  }} --dport 80 -j ACCEPT
        iptables -I FORWARD 1 -i any -o any -j ACCEPT
        iptables-save > /etc/iptables.conf
      when: kvm_firewall == "iptables"



    - name: Configure Firewalld
      become: true
      ignore_errors: yes
      shell: |
        DEFAULT_ZONE=$(sudo firewall-cmd --get-default-zone)
        sudo firewall-cmd --add-rich-rule "rule service name="libvirt" reject" --permanent
        sudo firewall-cmd --zone=$DEFAULT_ZONE --add-service=libvirt --permanent
        sudo firewall-cmd --zone=$DEFAULT_ZONE --change-interface=tt0  --permanent
        sudo firewall-cmd --zone=$DEFAULT_ZONE --change-interface=virbr0  --permanent
      when: kvm_firewall == "firewalld"

    - name: Configure Firewalld
      become: true
      ignore_errors: yes
      shell: |
        sudo firewall-cmd --add-rich-rule "rule service name="libvirt" reject"
        sudo firewall-cmd --zone=dmz --change-interface=virbr0
        sudo firewall-cmd --zone=dmz --change-interface=tt0
        sudo firewall-cmd --zone=dmz --add-service=libvirt
      when: ansible_distribution  == "Fedora"


    - name: Create a directory /etc/NetworkManager/conf.d if it does not exist
      file:
        path: /etc/NetworkManager/conf.d
        state: directory
        mode: '0755'



    - name: Finish Host network configuration
      copy:
        dest:  /etc/NetworkManager/conf.d/openshift.conf
        content: |
          [main]
          dns=dnsmasq


    - name: Create a directory /etc/NetworkManager/dnsmasq.d if it does not exist
      file:
        path: /etc/NetworkManager/dnsmasq.d
        state: directory
        mode: '0755'


## NOTE: We configure .apps.{{ baseDomain }}/{{ ocp_apps_vip  }} instead of .apps.{{ metadata.name }}.{{ baseDomain }}/{{ ocp_apps_vip  }} because of https://github.com/openshift/installer/issues/1007

    - name: Finish Host network configuration
      copy:
        dest:  /etc/NetworkManager/dnsmasq.d/openshift.conf
        content: |
          server=/{{ baseDomain }}/{{ ocp_cluster_net_gw }}
          address=/.apps.{{ baseDomain }}/{{ ocp_apps_vip  }}



    - name: Configure DNS external servers
      shell: nmcli con mod {{ kvm_interface }} ipv4.dns "8.8.8.8 8.8.4.4"

    - name: Reload network
      become: true
      systemd:
        name: NetworkManager
        state: reloaded


 #   - name: restart network
 #     become: true
 #     systemd:
 #       name: NetworkManager
 #       state: restarted


 #   - name: Wait for SSH connection
 #     local_action: wait_for host={{ ansible_host }} delay=15 port={{ ansible_port }} timeout=300 state=started


